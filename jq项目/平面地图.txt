
/*
/!*平面地图*!/
var myChart = echarts.init(document.getElementById('main'));
// 市区坐标
var geoCoordMap = {
    "杭州市": [120.153576, 30.287459],
    "宁波市": [121.549792, 29.868388],
    "温州市": [120.672111, 28.000575],
    "嘉兴市": [120.750865, 30.762653],
    "湖州市": [120.102398, 30.867198],
    "绍兴市": [120.582112, 29.997117],
    "金华市": [119.649506, 29.089524],
    "衢州市": [118.87263, 28.941708],
    "舟山市": [122.106863, 30.016028],
    "台州市": [121.428599, 28.661378],
    "丽水市": [119.921786, 28.451993],
};
var rawData = [
    // ["东城区",10,20,30],
    // ["西城区",10,20,30],
    ["杭州市",10,20],
    ["宁波市",10,20],
    ["温州市",10,50],
    ["嘉兴市",10,20],
    ["湖州市",10,20],
    ["绍兴市",20,20],
    ["金华市",10,20],
    ["衢州市",10,20],
    ["舟山市",40,20],
    ["台州市",10,20],
    ["丽水市",30,20],
];


 function makeMapData(rawData) {
    var mapData = [];
    for (var i = 0; i < rawData.length; i++) {
        var geoCoord = geoCoordMap[rawData[i][0]];
        if (geoCoord) {
            mapData.push({
                name: rawData[i][0],
                value: geoCoord.concat(rawData[i].slice(1))
            });
        }
    }
    return mapData;
};

option = {
    animation: false,
    // 地图背景颜色
    backgroundColor: new echarts.graphic.RadialGradient(0.5, 0.5, 0.4, [{
        offset: 0,
        //背景中心点放射颜色
        color: 'rgba(0,61,106,1)'
    }, {
        offset: 1,
        color: 'rgba(0,61,106,0.2)'
    }]),
    tooltip: {
        trigger: 'axis'
    },
    geo: {
        map: '浙江',
        // silent: true,
        roam: true,
        zoom: 1.155, // 地图初始大小
        center:[120.649506, 29.089524], // 初始中心位置
        label: {
            emphasis: {
                show: false,
                areaColor: '#eee'
            }
        },
        // 地区块儿颜色
        itemStyle: {
            normal: {
                areaColor: '#97ddf7',
                borderColor: '#666'
            },
            emphasis: {
                //划入颜色
                areaColor: '#00ddfe'
            }
        }
    },
    series: []
};

function renderEachCity() {
    var option = {
        xAxis: [],
        yAxis: [],
        grid: [],
        series: []
    };

    echarts.util.each(rawData, function(dataItem, idx) {
        var geoCoord = geoCoordMap[dataItem[0]];
        var coord = myChart.convertToPixel('geo', geoCoord);
        idx += '';
        //获取柱状图数值
        inflationData = [dataItem[1],dataItem[2]];
        option.xAxis.push({
            id: idx,
            gridId: idx,
            type: 'category',
            name: dataItem[0],
            nameLocation: 'middle',
            nameGap: 3,
            splitLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                show: false
            },
            axisLine: {
                onZero: false,
                lineStyle: {
                    color: '#666'
                }
            },
            data: ["输电","变电"],
            z: 100

        });
        option.yAxis.push({
            id: idx,
            gridId: idx,
            splitLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                show: false
            },
            axisLine: {
                show: false,
                lineStyle: {
                    color: '#1C70B6'
                }
            },
            z: 100
        });
        option.grid.push({
            id: idx,
            width: 30,
            height: 40,
            left: coord[0] - 15,
            top: coord[1] - 15,
            z: 100
        });
        option.series.push({
            id: idx,
            type: 'bar',
            xAxisId: idx,
            yAxisId: idx,
            barGap: 0,
            barCategoryGap: 0,
            data: inflationData,
            z: 100,
            itemStyle: {
                normal: {
                    color: function(params){
                        // 柱状图每根柱子颜色
                        var colorList = ['#F75D5D','#59ED4F'];
                        return colorList[params.dataIndex];
                    }
                }
            }
        });
    });
    myChart.setOption(option);
}

setTimeout(renderEachCity, 0);
// 缩放和拖拽
function throttle(fn, delay, debounce) {

    var currCall;
    var lastCall = 0;
    var lastExec = 0;
    var timer = null;
    var diff;
    var scope;
    var args;

    delay = delay || 0;

    function exec() {
        lastExec = (new Date()).getTime();
        timer = null;
        fn.apply(scope, args || []);
    }

    var cb = function() {
        currCall = (new Date()).getTime();
        scope = this;
        args = arguments;
        diff = currCall - (debounce ? lastCall : lastExec) - delay;

        clearTimeout(timer);

        if (debounce) {
            timer = setTimeout(exec, delay);
        } else {
            if (diff >= 0) {
                exec();
            } else {
                timer = setTimeout(exec, -diff);
            }
        }

        lastCall = currCall;
    };

    return cb;
}

var throttledRenderEachCity = throttle(renderEachCity, 0);
myChart.on('geoRoam', throttledRenderEachCity);
myChart.setOption(option);


// 点击显示柱状图
/!*myChart.on('click',function(e){
    console.log(e)
    // console.log(params);
    if(e.componentSubType == "bar"){
        // 先清除所有柱状图
        $('.tongJiTu').remove();
        // 创建遮挡层
        creatWrap();
        // 创建柱状图容器
        var divObj = document.createElement('div');
        $(divObj).addClass('tongJiTu');
        divObj.id = 'zhuzhuang';
        var divX = getMousePos()['x'];
        var divY = getMousePos()['y'];
        $(divObj).css({
            'width': 250,
            'height': 180,
            'border': '1px solid #ccc',
            'position': 'absolute',
            'top': divY-100,
            'left': divX-500
        }).appendTo('.wrap');
        // 创建柱状图
        zhuZhuangTu();
        // 点击遮挡层消失
        clearWrap('.zhedang');
    }
    return;
});*!/
// 获取横纵坐标
function getMousePos(e) {
    var e = event || window.event;
    var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
    var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
    var x = e.pageX || e.clientX + scrollX;
    var y = e.pageY || e.clientY + scrollY;
    // console.log(x,y)
    return {'x': x,'y': y};
}
// 生成柱状图
function zhuZhuangTu() {
    var zhuzhuang = echarts.init(document.getElementById('zhuzhuang'));
    option = {
        backgroundColor: 'rgba(255,255,255,.3)',
        legend: {
            data: ["输电","变电"]
        },
        xAxis: [
            {

                type: 'category',
                data: ["输电","变电"]
            }
        ],
        yAxis: [
            {
                splitLine: {
                    show: false
                },
                type: 'value'
            }
        ],
        series: [
            {
                type: 'bar',
                itemStyle: {
                    normal: {
                        color: function(params){
                            var colorList = ['#F75D5D','#59ED4F'];
                            return colorList[params.dataIndex];
                        },
                        label: {
                            show: true,
                            position: 'top',
                            textStyle: {
                                color: '#000'
                            }
                        }
                    }
                },
                data: [10,20]
            }
        ]
    };
    zhuzhuang.setOption(option);
}
// 生成遮挡层
function creatWrap(){
    var zheDang = document.createElement('div');
    $(zheDang).addClass('zhedang').css({
        width: '100%',
        height: '100%',
        position: 'absolute',
        top: 0,
        left: 0,
        backgroundColor: 'rgba(0,0,0,.2)'
    }).appendTo('.wrap');
}
// 去掉遮挡层
function clearWrap(id){
    $(id).click(function(e){
        // console.log(this);
        this.remove();
        $('.tongJiTu').remove();
        return false;
    });
}
*/
